Warning: no access to tty; thus no job control in this shell...
Not a terminal
TERM: Undefined variable.
set echo
set time = 1
set timestamp
setenv NMPI 64
setenv T hycom/GLBt0.72/src_2.2.60_02_mpi/TEST
mkdir -p /scr/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST
cd /scr/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST
echo /scr/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST
/scr/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST
setenv NPATCH `echo $NMPI | awk '{printf("%04d", $1)}'`
echo 64
awk {printf("%04d", $1)}
/bin/cp /u/home/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST/test_xcl .
/bin/cp /u/home/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST/../../topo/depth_GLBt0.72_14.a regional.depth.a
/bin/cp /u/home/wallcraf/hycom/GLBt0.72/src_2.2.60_02_mpi/TEST/../../topo/partit/depth_GLBt0.72_14.0064 patch.input
setenv MP_SHARED_MEMORY yes
setenv MP_SINGLE_THREAD yes
setenv MP_EAGER_LIMIT 32768
setenv MP_LABELIO YES
if ( -e /site/bin/launch ) then
setenv MEMORY_AFFINITY MCM
setenv UL_MODE PURE_MPI
setenv UL_TARGET_CPU_LIST AUTO_SELECT
poe /site/bin/launch ./test_xcl
ATTENTION: 0031-378 MP_EUIDEVICE setting ignored when a resource manager is not being used.  
0:
0:mnproc mproc nproc     i0   ii     j0   jj  i1sum iisum
0:     1     1     1      0  100      0   47      1     8
0:     2     2     1    100   50      0   47      5     4
0:     3     3     1    150   50      0   47      7     3
0:     4     4     1    200   74      0   47     -4     6
0:     5     5     1    274   76      0   47      0     6
0:     6     6     1    350  100      0   47      2     8
0:     7     7     1    450   50      0   47      6     4
0:     8     1     2      0   50     47   48      1     4
0:     9     2     2     50   50     47   48      3     4
0:    10     3     2    100   50     47   48      5     4
0:    11     4     2    150   50     47   48      7     3
0:    12     5     2    200   50     47   48     -4     4
0:    13     6     2    250   50     47   48     -2     4
0:    14     7     2    300   50     47   48      0     4
0:    15     8     2    350   50     47   48      2     4
0:    16     9     2    400   50     47   48      4     4
0:    17    10     2    450   50     47   48      6     4
0:    18     1     3      0   50     95   48      1     4
0:    19     2     3     50   50     95   48      3     4
0:    20     3     3    100   50     95   48      5     4
0:    21     4     3    150   50     95   48      7     3
0:    22     5     3    200   50     95   48     -4     4
0:    23     6     3    250   50     95   48     -2     4
0:    24     7     3    300   50     95   48      0     4
0:    25     8     3    350   50     95   48      2     4
0:    26     9     3    400   50     95   48      4     4
0:    27    10     3    450   50     95   48      6     4
0:    28     1     4      0   50    143   48      1     4
0:    29     2     4     50   50    143   48      3     4
0:    30     3     4    100   50    143   48      5     4
0:    31     4     4    150   50    143   48      7     3
0:    32     5     4    200   50    143   48     -4     4
0:    33     6     4    250   50    143   48     -2     4
0:    34     7     4    300   74    143   48      0     6
0:    35     8     4    374   76    143   48      4     6
0:    36     9     4    450   50    143   48      6     4
0:    37     1     5      0   50    191   48      1     4
0:    38     2     5     50   50    191   48      3     4
0:    39     3     5    100   50    191   48      5     4
0:    40     4     5    150   50    191   48      7     3
0:    41     5     5    200   50    191   48     -4     4
0:    42     6     5    250   50    191   48     -2     4
0:    43     7     5    300   50    191   48      0     4
0:    44     8     5    350  100    191   48      2     8
0:    45     9     5    450   50    191   48      6     4
0:    46     2     6     64   36    239   48    -11     4
0:    47     3     6    100   50    239   48      5     4
0:    48     4     6    150   50    239   48      7     3
0:    49     5     6    200  100    239   48     -4     8
0:    50     6     6    300   57    239   48      0     4
0:    51     7     6    357   93    239   48     -5     8
0:    52     2     7     90  100    287   48    -11     9
0:    53     3     7    190   30    287   48      6     2
0:    54     5     7    280   70    287   48     -6     6
0:    55     6     7    350   50    287   48      2     4
0:    56     7     7    400   40    287   48      4     3
0:    57     2     8     50   50    335   47    -10     5
0:    58     3     8    100   50    335   47      5     4
0:    59     4     8    150   50    335   47      7     3
0:    60     5     8    200   50    335   47     -4     4
0:    61     6     8    250   50    335   47     -2     4
0:    62     7     8    300   50    335   47      0     4
0:    63     8     8    350   50    335   47      2     4
0:    64     9     8    400   50    335   47      4     4
0: 
0:mnproc mproc nproc mnarct
0:    57     2     8     63
0:    58     3     8     62
0:    59     4     8     61
0:    60     5     8     60
0:    61     6     8     59
0:    62     7     8     58
0:    63     8     8     57
0:    64     9     8     56
0: 
0: itdm,jtdm =  500 382
0: idm, jdm  =  125 96
0: sea, land =  114747 76253
0: aorig =  0.000000000000000000E+00 0.000000000000000000E+00 0.000000000000000000E+00 0.000000000000000000E+00
0: atile =  0.000000000000000000E+00 0.000000000000000000E+00 0.000000000000000000E+00 0.000000000000000000E+00
0: 
0: call xclget(ati,jtdm, atile, itdm/2,1,0,+1)
0: arrays are identical
0: 
0: call xclget(ati,40, atile, itdm/2,jtdm/2-20,0,+1)
0: arrays are identical
0: 
0: call xclget(ati,jtdm, atile, itdm/2,jtdm,0,-1)
0: arrays are identical
0: 
0: call xclget(ati,40, atile, itdm/2,jtdm/2+20,0,-1)
0: arrays are identical
0: 
0: call xclget(atj,itdm, atile, 1,jtdm/2,+1,0)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2-20,jtdm/2,+1,0)
0: arrays are identical
0: 
0: call xclget(atj,itdm, atile, itdm,jtdm/2,-1,0)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2+20,jtdm/2,-1,0)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2+20,jtdm/2+20,-1,-1)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2+20,jtdm/2-20,-1,+1)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2-20,jtdm/2+20,+1,-1)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2-20,jtdm/2-20,+1,+1)
0: arrays are identical
0: 
0: call xciget(ati,jtdm, atile, itdm/2,1,0,+1)
0: arrays are identical
0: 
0: call xciget(ati,40, atile, itdm/2,jtdm/2-20,0,+1)
0: arrays are identical
0: 
0: call xciget(ati,jtdm, atile, itdm/2,jtdm,0,-1)
0: arrays are identical
0: 
0: call xciget(ati,40, atile, itdm/2,jtdm/2+20,0,-1)
0: arrays are identical
0: 
0: call xciget(atj,itdm, atile, 1,jtdm/2,+1,0)
0: arrays are identical
0: 
0: call xciget(atj,40, atile, itdm/2-20,jtdm/2,+1,0)
0: arrays are identical
0: 
0: call xciget(atj,itdm, atile, itdm,jtdm/2,-1,0)
0: arrays are identical
0: 
0: call xciget(atj,40, atile, itdm/2+20,jtdm/2,-1,0)
0: arrays are identical
0: 
0: call xciget(atj,40, atile, itdm/2+20,jtdm/2+20,-1,-1)
0: arrays are identical
0: 
0: call xciget(atj,40, atile, itdm/2+20,jtdm/2-20,-1,+1)
0: arrays are identical
0: 
0: call xciget(atj,40, atile, itdm/2-20,jtdm/2+20,+1,-1)
0: arrays are identical
0: 
0: call xclget(atj,40, atile, itdm/2-20,jtdm/2-20,+1,+1)
0: arrays are identical
0: 
0: call XCIGET(ati,jtdm, atile, itdm/2,1,0,+1)
0: arrays are identical
0: 
0: call XCIGET(atj,itdm, atile, 1,jtdm/2,+1,0)
0: arrays are identical
0: 
0: call XCIGET(ati,jtdm, atile, itdm/2-5,1,0,+1)
0: arrays are identical
0: 
0: call XCIGET(atj,itdm, atile, 1,jtdm/2-5,+1,0)
0: arrays are identical
0: 
0:
0:
0:    timer statistics, processor    1 out of   64
0:   -----------------------------------------------
0:
0:   xclget   calls =       13   time =    0.00307   time/call =    0.00023592
0:   xc****   calls =        1   time =    0.00613   time/call =    0.00613403
0:   total    calls =        1   time =    0.20074   time/call =    0.20073891
0:
0:
0:
0: **************************************************
0: (normal)
0: **************************************************
0: 
0: mpi_finalize called on processor  1
1: mpi_finalize called on processor  2
2: mpi_finalize called on processor  3
3: mpi_finalize called on processor  4
4: mpi_finalize called on processor  5
5: mpi_finalize called on processor  6
6: mpi_finalize called on processor  7
7: mpi_finalize called on processor  8
8: mpi_finalize called on processor  9
9: mpi_finalize called on processor  10
10: mpi_finalize called on processor  11
11: mpi_finalize called on processor  12
12: mpi_finalize called on processor  13
13: mpi_finalize called on processor  14
14: mpi_finalize called on processor  15
15: mpi_finalize called on processor  16
16: mpi_finalize called on processor  17
17: mpi_finalize called on processor  18
18: mpi_finalize called on processor  19
19: mpi_finalize called on processor  20
20: mpi_finalize called on processor  21
21: mpi_finalize called on processor  22
22: mpi_finalize called on processor  23
23: mpi_finalize called on processor  24
24: mpi_finalize called on processor  25
25: mpi_finalize called on processor  26
26: mpi_finalize called on processor  27
27: mpi_finalize called on processor  280-63:STOP (xcstop)

28: mpi_finalize called on processor  29
29: mpi_finalize called on processor  30
30: mpi_finalize called on processor  31
31: mpi_finalize called on processor  32
32: mpi_finalize called on processor  33
33: mpi_finalize called on processor  34
34: mpi_finalize called on processor  35
35: mpi_finalize called on processor  36
36: mpi_finalize called on processor  37
37: mpi_finalize called on processor  38
38: mpi_finalize called on processor  39
39: mpi_finalize called on processor  40
40: mpi_finalize called on processor  41
41: mpi_finalize called on processor  42
42: mpi_finalize called on processor  43
43: mpi_finalize called on processor  44
44: mpi_finalize called on processor  45
45: mpi_finalize called on processor  46
46: mpi_finalize called on processor  47
47: mpi_finalize called on processor  48
48: mpi_finalize called on processor  49
49: mpi_finalize called on processor  50
50: mpi_finalize called on processor  51
51: mpi_finalize called on processor  52
52: mpi_finalize called on processor  53
53: mpi_finalize called on processor  54
54: mpi_finalize called on processor  55
55: mpi_finalize called on processor  56
56: mpi_finalize called on processor  57
57: mpi_finalize called on processor  58
58: mpi_finalize called on processor  59
59: mpi_finalize called on processor  60
60: mpi_finalize called on processor  61
61: mpi_finalize called on processor  62
62: mpi_finalize called on processor  63
63: mpi_finalize called on processor  64
0.0u 0.0s 0:09 1% 2+4k 0+0io 0pf+0w
else
logout
