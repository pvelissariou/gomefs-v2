      PROGRAM MONTHLY
      USE MOD_ZA  ! HYCOM array I/O interface
      IMPLICIT NONE
C
C     FLUX ARRAYS.
C
      INTEGER, ALLOCATABLE :: MSK(:,:)
      REAL*4,  ALLOCATABLE :: FOUT(:,:),FIN(:,:,:)
C
      CHARACTER PREAMBL(5)*79
C
C     NAMELIST.
C
      CHARACTER*40     CTITLE
      CHARACTER*6      CNAME 
      NAMELIST/AFTITL/ CTITLE,CNAME
      REAL*8           FINC,FSTART,WSTART,TSTART,TMAX
      INTEGER          ILIMIT
      NAMELIST/AFTIME/ FINC,FSTART,WSTART,TSTART,TMAX,
     +                 ILIMIT
C
C**********
C*
C 1)  FROM MONTHLY FLUX FIELDS ON THE MODEL GRID,
C      CREATE A TIME-INTERPOLATED MODEL GRID FLUX FILE
C      SUITABLE FOR INPUT TO THE HYCOM OCEAN MODEL OVER THE GIVEN
C      REGION.
C
C 2)  NO 2.
C
C 3)  NAMELIST INPUT:
C
C     /AFTITL/
C        CTITLE - ONE (40-CHARACTER) LINE TITLE.
C        CNAME  - ONE  (6-CHARACTER) FIELD NAME.
C
C     /AFTIME/
C        FINC   - TIME INCREMENT BETWEEN OUTPUT FLUXES     (DAYS)
C                  =30.5; MONTHLY OUTPUT
C        FSTART - TIME OF HEAT FLUX START                  (DAYS)
C        WSTART - TIME OF WIND START, IGNORED HERE         (DAYS)
C        TMAX   - TIME OF END   OF CURRENT INTEGRATION     (DAYS)
C        TSTART - TIME OF START OF CURRENT INTEGRATION     (DAYS)
C        ILIMIT - PREVENT INTERPOLATION FROM CREATING NEW EXTREMA
C                  =0;  NO (DEFAULT)
C                  =1; YES
C
C     NAMELIST /AFTIME/ IS PATTERNED AFTER /XXTIME/ SO THAT THE
C      MODEL''S STANDARD AWK-BASED RUN SCRIPT CUSTOMIZER CAN ALSO
C      WORK FOR THE FLUX GENERATION SCRIPT.  IN PARTICULAR, 'WSTART'
C      IS READ IN, BUT NOT USED.
C
C 4)  INPUT:
C        ON UNIT  5:    NAMELIST /AFTITL/, /AFTIME/
C        ON UNIT 20:    UNFORMATTED MODEL FIELD FILE
C     OUTPUT:
C        ON UNIT 10:    UNFORMATTED MODEL FIELD FILE
C
C 5)  NO 5.
C
C 6)  THE INPUT AND OUTPUT FIELDS ARE AT EVERY GRID POINT OF THE MODEL'S
C     'P' GRID.  ARRAY SIZE IS 'IDM' BY 'JDM'.
C
C 7)  MIN, MAX, MEAN AND RMS OF THE ENTIRE BASIN ARE OUTPUT FOR EACH 
C      RECORD.  NOTE HOWEVER THAT THESE VALUES MAY NOT REPRESENT THE
C      STATISTICS OF THE FLUXS AS SEEN BY THE MODEL, IF THE INPUT FLUX 
C      DATA HAS NON-REALISTIC VALUES OVER LAND.  IT IS UP TO THE USER 
C      TO CHECK THE LOG FILES FOR CONSISTENCY BETWEEN MACHINES.
C
C 8)  ALAN J. WALLCRAFT,  NRL,  MARCH 2003.
C*
C**********
C
      EXTERNAL AVERMS,MINMAX
C
      INTEGER    MAXREC
      PARAMETER (MAXREC=90000)
C
      INTEGER NREC
      REAL*4  WDAY(MAXREC+1),WSTRT,WEND
      REAL*4  HMINA,HMINB,HMAXA,HMAXB
C
      INTEGER I,J,KREC
      REAL*4  FDY,WYR,
     +        XMIN,XMAX,XAVE,XRMS
      INTEGER K0,K1,K2,K3
      REAL*4  W0,W1,W2,W3,FI
C
C --- MODEL ARRAYS.
C
      CALL XCSPMD  !define idm,jdm
      ALLOCATE(  MSK(IDM,JDM) )
      ALLOCATE( FOUT(IDM,JDM) )
      ALLOCATE(  FIN(IDM,JDM,12) )
C
C     NAMELIST INPUT.
C
      CALL ZHOPEN(6, 'FORMATTED', 'UNKNOWN', 0)
C
      CTITLE = ' '
      WRITE(6,*) 'READING /AFTITL/'
      CALL ZHFLSH(6)
      READ( 5,AFTITL)
      WRITE(6,AFTITL)
C
      FSTART = 0.0
      WSTART = 0.0
      TSTART = 0.0
      TMAX   = 0.0
      ILIMIT = 0    !allow new extrema from interpolation
      WRITE(6,*) 'READING /AFTIME/'
      CALL ZHFLSH(6)
      READ( 5,AFTIME)
      WRITE(6,AFTIME)
      WRITE(6,*) 
      CALL ZHFLSH(6)
      IF     (FINC.EQ.0.0) THEN
        WRITE(6,*) 'ERROR - FINC MUST BE POSITIVE'
        WRITE(6,*) 
        CALL ZHFLSH(6)
        STOP
      ENDIF
C
      CALL ZAIOST
C
C     INITIALIZE OUTPUT.
C
      WRITE(6,6000) 'OUTPUT:',CTITLE
      CALL ZHFLSH(6)
C
      PREAMBL(1) = CTITLE
      PREAMBL(2) = ' '
      PREAMBL(3) = ' '
      PREAMBL(4) = ' '
      WRITE(PREAMBL(5),'(A,2I5,I3,F9.3,F9.2,2F6.3)')
     +        'i/jdm =',
     +       IDM,JDM
C
      CALL ZAIOPN('NEW', 10)
      CALL ZHOPEN(10, 'FORMATTED', 'NEW', 0)
C
      WRITE(10,4101) PREAMBL
      WRITE(6,*)
      WRITE(6, 4101) PREAMBL
      WRITE(6,*)
C
C     READ IN THE MONTHLY FLUXES.
C     NOTE NO .b FILE.
C
      CALL ZAIOPN('OLD', 20)
      DO KREC= 1,12
        CALL ZAIORD(FIN(1,1,KREC),MSK,.FALSE., XMIN,XMAX, 20)
      ENDDO
      CALL ZAIOCL(20)
C
C     PROCESS ALL THE FLUX RECORDS.
C
      NREC = NINT( (TMAX - TSTART) / FINC ) + 1
C
      WDAY(1) = FSTART
      DO 810 KREC= 1,NREC
C
C       SPECIFY THE FLUX DAY.
C
        WDAY(KREC+1) = FSTART + KREC*FINC
        CALL FCOEFS(K0,K1,K2,K3,W0,W1,W2,W3, WDAY(KREC))
C
C       INTERPOLATE IN TIME.
C
        DO J= 1,JDM
          DO I= 1,IDM
            FI = W0*FIN(I,J,K0) + W1*FIN(I,J,K1) +
     +           W2*FIN(I,J,K2) + W3*FIN(I,J,K3)
            IF     (ILIMIT.EQ.1) THEN
              FI = MAX( FI, MIN( FIN(I,J,K0),
     +                           FIN(I,J,K1),
     +                           FIN(I,J,K2),
     +                           FIN(I,J,K3) ) )
              FI = MIN( FI, MAX( FIN(I,J,K0),
     +                           FIN(I,J,K1),
     +                           FIN(I,J,K2),
     +                           FIN(I,J,K3) ) )
            ENDIF
            FOUT(I,J) = FI
          ENDDO
        ENDDO
C
C       WRITE OUT STATISTICS.
C
        CALL MINMAX(FOUT,IDM,JDM, XMIN,XMAX)
        CALL AVERMS(FOUT,IDM,JDM, XAVE,XRMS)
        WRITE(6,8100) 'FOUT', XMIN,XMAX,XAVE,XRMS
C
C       WRITE OUT HYCOM FLUXS.
C
        CALL ZAIOWR(FOUT,MSK,.FALSE., XMIN,XMAX, 10, .FALSE.)
        IF     (NREC.EQ.12 .AND. FINC.EQ.30.5) THEN
          WRITE(10,4102) CNAME,KREC,XMIN,XMAX
        ELSE
          WRITE(10,4112) CNAME,WDAY(KREC),WDAY(KREC+1)-WDAY(KREC),
     +                     XMIN,XMAX
        ENDIF
        CALL ZHFLSH(10)
C
        CALL WNDAY(WDAY(KREC), WYR,FDY)
        WRITE(6,6300) KREC,WDAY(KREC),FDY,NINT(WYR)
        CALL ZHFLSH(6)
  810 CONTINUE
C
      CALL ZAIOCL(10)
      CLOSE( UNIT=10)
C
C     SUMMARY.
C
      CALL WNDAY(WDAY(1), WYR,FDY)
      WRITE(6,6400) NREC,FDY,NINT(WYR),WDAY(NREC+1)-WDAY(1)
      CALL ZHFLSH(6)
      STOP
C
 4101 FORMAT(A79)
 4102 FORMAT(2X,A,': month,range = ',I2.2,1P2E16.7)
 4112 FORMAT(2X,A,': day,span,range =',F12.5,F10.6,1P2E16.7)
 6000 FORMAT(1X,A,2X,A40 //)
 6300 FORMAT(10X,'WRITING FLUX RECORD',I5,
     +           '    FDAY =',F10.3,
     +            '  FDATE =',F8.3,'/',I4 /)
 6400 FORMAT(I5,' RECORD CLIMATOLOGY STARTING ON',F8.3,'/',I4,
     +   ' COVERING',F9.2,' DAYS')
 8100 FORMAT(1X,A,': MIN=',F13.8,' MAX=',F13.8,
     +             ' AVE=',F13.8,' RMS=',F13.8)
C     END OF PROGRAM MONTHLY.
      END
      SUBROUTINE WNDAY(WDAY, YEAR,DAY)
      IMPLICIT NONE
      REAL*4 WDAY,YEAR,DAY
C
C**********
C*
C  1) CONVERT 'FLUX DAY' INTO JULIAN DAY AND YEAR.
C
C  2) THE 'FLUX DAY' IS THE NUMBER OF DAYS SINCE 001/1901 (WHICH IS 
C      FLUX DAY 1.0).
C     FOR EXAMPLE:
C      A) YEAR=1901.0 AND DAY=1.0, REPRESENTS 0000Z HRS ON 001/1901
C         SO WDAY WOULD BE 1.0.
C      B) YEAR=1901.0 AND DAY=2.5, REPRESENTS 1200Z HRS ON 002/1901
C         SO WDAY WOULD BE 2.5.
C     YEAR MUST BE NO LESS THAN 1901.0, AND NO GREATER THAN 2099.0.
C     NOTE THAT YEAR 2000 IS A LEAP YEAR (BUT 1900 AND 2100 ARE NOT).
C
C  3) ALAN J. WALLCRAFT, PLANNING SYSTEMS INC., FEBRUARY 1993.
C*
C**********
C
      INTEGER IYR,NLEAP
      REAL*4  WDAY1
C
C     FIND THE RIGHT YEAR.
C
      IYR   = (WDAY-1.0)/365.25
      NLEAP = IYR/4
      WDAY1 = 365.0*IYR + NLEAP + 1.0
      DAY   = WDAY - WDAY1 + 1.0
      IF     (WDAY1.GT.WDAY) THEN
        IYR   = IYR - 1
      ELSEIF (DAY.GE.367.0) THEN
        IYR   = IYR + 1
      ELSEIF (DAY.GE.366.0 .AND. MOD(IYR,4).NE.3) THEN
        IYR   = IYR + 1
      ENDIF
      NLEAP = IYR/4
      WDAY1 = 365.0*IYR + NLEAP + 1.0
C
C     RETURN YEAR AND JULIAN DAY.
C
      YEAR = 1901 + IYR
      DAY  = WDAY - WDAY1 + 1.0
      RETURN
C     END OF WNDAY.
      END
      SUBROUTINE FCOEFS(K0,K1,K2,K3,W0,W1,W2,W3, FDAY)
      IMPLICIT NONE
C
      INTEGER K0,K1,K2,K3
      REAL*4  W0,W1,W2,W3, FDAY
C
C     FIND THE MONTHLY INTERPOLATION COEFFICENTS FOR A GIVEN
C     FLUX DAY.
C
      REAL*4     ONE,TWELVE,FIFTEEN
      PARAMETER (ONE=1.0, TWELVE=12.0, FIFTEEN=15.0)
C
      REAL*4 FYR,FDY,YEAR,X,X1
C
      CALL WNDAY(FDAY, FYR,FDY)
      IF     (MOD(NINT(FYR),4).EQ.0) THEN
        YEAR = 366.0
      ELSE
        YEAR = 365.0
      ENDIF
C
      X  = 1.0+MOD(FDY+YEAR-FIFTEEN,YEAR)/(YEAR/TWELVE)
      K1 = X
      K0 = MOD(K1+10,12)+1
      K2 = MOD(K1,   12)+1
      K3 = MOD(K2,   12)+1
C
      X  = MOD(X,ONE)
      X1 = 1.-X
      W1 = X1*(1.+X *(1.-1.5*X ))
      W2 = X *(1.+X1*(1.-1.5*X1))
      W0 = -.5*X *X1*X1
      W3 = -.5*X1*X *X
C
*     WRITE(6,6000) FDAY,FDY,K0,K1,K2,K3,W0,W1,W2,W3
*     CALL ZHFLSH(6)
      RETURN
 6000 FORMAT('FCOEFS:',F9.2,F7.2,4I3,4F7.3)
      END
